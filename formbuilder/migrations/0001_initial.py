# Generated by Django 5.2.4 on 2025-08-04 15:01

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('token_created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('receiver_emails', models.TextField(blank=True, help_text='Comma-separated list of email addresses for form submissions')),
                ('receiver_email', models.EmailField(blank=True, help_text='(Legacy) Single receiver email', max_length=254)),
                ('recaptcha_enabled', models.BooleanField(default=False)),
                ('email_confirmation_required', models.BooleanField(default=False)),
                ('confirmation_message', models.TextField(blank=True, help_text='Template for the email confirmation message sent to the user', null=True)),
                ('email_message', models.TextField(blank=True, help_text='Template for the email message sent to receiver', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default_field_name', max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('email', 'Email'), ('textarea', 'Textarea'), ('number', 'Number'), ('date', 'Date'), ('radio', 'Radio'), ('checkbox', 'Checkbox')], max_length=20)),
                ('required', models.BooleanField(default=True)),
                ('choices', models.TextField(blank=True)),
                ('regex_validation', models.CharField(blank=True, help_text='Enter a regex pattern for validation', max_length=255)),
                ('regex_error_message', models.CharField(blank=True, default='Invalid format', max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='formbuilder.form')),
            ],
        ),
        migrations.CreateModel(
            name='SMTPSenderConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('smtp_host', models.CharField(max_length=255)),
                ('smtp_port', models.IntegerField()),
                ('smtp_username', models.CharField(max_length=255)),
                ('smtp_password_encrypted', models.TextField()),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smtp_configs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'email')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_confirmation', models.BooleanField(default=False)),
                ('confirmation_subject', models.CharField(blank=True, max_length=200)),
                ('confirmation_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='formbuilder.form')),
                ('smtp_config', models.ForeignKey(blank=True, help_text='SMTP configuration for sending this notification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='formbuilder.smtpsenderconfig')),
            ],
        ),
        migrations.AddField(
            model_name='form',
            name='smtp_config',
            field=models.ForeignKey(blank=True, help_text='SMTP configuration for sending emails', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forms', to='formbuilder.smtpsenderconfig'),
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='formbuilder.form')),
            ],
        ),
        migrations.CreateModel(
            name='FieldResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField(blank=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formbuilder.field')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='formbuilder.submission')),
            ],
        ),
    ]
